library(ggplot2)
library(dplyr)
library(sf)
library(viridis)
# Set working directory (adjust as needed)
setwd("/Users/sunjiajing/Desktop/R2025/R-fPCA-ks-20240406")
rm(list=ls())
# List of dependencies as mentioned in your error message
# dependencies <- c("crul", "XML", "isdparser", "geonames", "hoardr")
# Install each dependency
#install.packages(dependencies)
#install.packages("https://cran.r-project.org/src/contrib/Archive/rnoaa/rnoaa_1.1.0.tar.gz", repos = NULL, type = "source")
set.seed(123)  # For reproducibility
# Set working directory (optional for RStudio users)
if (requireNamespace("rstudioapi", quietly = TRUE)) {
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
}
library(viridis)  # For color scale
library(ggplot2)
library(sf)
library(dplyr)
library(rnoaa)
# Fetch data; here we use GHCN (Global Historical Climatology Network) daily data for a specific station
ghcn_data <- ghcnd_search(stationid = "USW00094728", # Example station ID for New York (Central Park)
var = "TMAX", # Maximum temperature
date_min = "2020-01-01",
date_max = "2020-12-31")
# Check the data structure
print(head(ghcn_data))
# Plotting the data
# Ensure the data is a dataframe; assuming `ghcn_data$tmax` is your intended dataset
temperature_data <- ghcn_data$tmax
# Check the structure to make sure it's a dataframe
str(temperature_data)
# Plotting the data
ggplot(data = temperature_data, aes(x = date, y = tmax)) +
geom_line() +
labs(title = "Daily Maximum Temperature in 2020",
x = "Date",
y = "Temperature (tenths of degrees C)") +
theme_minimal()
############################# download data  #############################
# Vector of station IDs for each state (you will fill this with actual station IDs)
station_ids <- c(
"USW00094823", "USW00093820", "USW00012842", "USW00023234", "USW00013722", # Example IDs
"USW00014732", "USW00012960", "USW00013880", "USW00023183", "USW00013739",
"USW00094728", "USW00024157", "USW00014922", "USW00013957", "USW00023050",
"USW00013748", "USW00014734", "USW00013874", "USW00093729", "USW00023066",
"USW00093817", "USW00024011", "USW00094846", "USW00012918", "USW00024131",
"USW00014941", "USW00012839", "USW00024155", "USW00013994", "USW00025339",
"USW00023065", "USW00094745", "USW00013723", "USW00024229", "USW00013740",
"USW00013889", "USW00013743", "USW00012836", "USW00013735", "USW00014898",
"USW00012921", "USW00013713", "USW00013733", "USW00093993", "USW00093819",
"USW00093721", "USW00023061", "USW00012916", "USW00024156", "USW00014827"
)
# Initialize a list to store data for each station
ghcn_data_list <- list()
# Loop over station IDs to fetch TMAX data from 2015 to 2024
for (station_id in station_ids) {
# Fetch data
temp_data <- ghcnd_search(stationid = station_id,
var = "TMAX",
date_min = "2015-01-01",
date_max = "2024-12-31")
# Add to list
ghcn_data_list[[station_id]] <- temp_data$tmax
}
# ======================
# Daily Max Temperature - 2014 Summary
# ======================
# Clean environment
rm(list = ls())
# Load libraries
library(rnoaa)
library(ggplot2)
library(dplyr)
library(sf)
library(viridis)
# Set working directory (optional for RStudio users)
if (requireNamespace("rstudioapi", quietly = TRUE)) {
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
}
# -----------------------------
# Step 1: Define station IDs
# -----------------------------
station_to_state <- data.frame(
id = c("USW00094823", "USW00093820", "USW00012842", "USW00023234", "USW00013722",
"USW00014732", "USW00012960", "USW00013880", "USW00023183", "USW00013739",
"USW00094728", "USW00024157", "USW00014922", "USW00013957", "USW00023050",
"USW00013748", "USW00014734", "USW00013874", "USW00093729", "USW00023066",
"USW00093817", "USW00024011", "USW00094846", "USW00012918", "USW00024131",
"USW00014941", "USW00012839", "USW00024155", "USW00013994", "USW00025339",
"USW00023065", "USW00094745", "USW00013723", "USW00024229", "USW00013740",
"USW00013889", "USW00013743", "USW00012836", "USW00013735", "USW00014898",
"USW00012921", "USW00013713", "USW00013733", "USW00093993", "USW00093819",
"USW00093721", "USW00023061", "USW00012916", "USW00024156", "USW00014827"),
state_name = c("Alabama", "Alaska", "Arizona", "Arkansas", "California",
"Colorado", "Connecticut", "Delaware", "Florida", "Georgia",
"Hawaii", "Idaho", "Illinois", "Indiana", "Iowa",
"Kansas", "Kentucky", "Louisiana", "Maine", "Maryland",
"Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri",
"Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey",
"New Mexico", "New York", "North Carolina", "North Dakota", "Ohio",
"Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina",
"South Dakota", "Tennessee", "Texas", "Utah", "Vermont",
"Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming")
)
# -----------------------------
# Step 2: Download 2014 data
# -----------------------------
ghcn_data_list <- list()
for (station_id in station_to_state$id) {
message("Downloading: ", station_id)
try({
temp_data <- ghcnd_search(
stationid = station_id,
var = "TMAX",
date_min = "2014-01-01",
date_max = "2014-12-31"
)
if (!is.null(temp_data$tmax)) {
temp_data$tmax$tmax <- temp_data$tmax$tmax / 10
ghcn_data_list[[station_id]] <- temp_data$tmax
}
}, silent = TRUE)
}
# Combine data into one dataframe
combined_data <- bind_rows(ghcn_data_list, .id = "id")
combined_data$date <- as.Date(combined_data$date)
combined_data$year <- format(combined_data$date, "%Y")
# -----------------------------
# Step 3: Plot for New York (USW00094728)
# -----------------------------
new_york_data <- ghcn_data_list[["USW00094728"]]
new_york_data$date <- as.Date(new_york_data$date)
ggplot(new_york_data, aes(x = date, y = tmax)) +
geom_line(color = "darkblue") +
labs(title = "Daily Max Temperature in New York (2014)",
x = "Date", y = "Temperature (°C)") +
theme_minimal()
# -----------------------------
# Step 4: Map of 2014 Average Temperature by State
# -----------------------------
# Compute state-wise average
avg_2014 <- combined_data %>%
group_by(id) %>%
summarize(avg_temp_2014 = mean(tmax, na.rm = TRUE), .groups = "drop") %>%
inner_join(station_to_state, by = "id")
# Load US states shapefile
us_states <- st_read("us-state-boundaries.shp")
colnames(us_states)[colnames(us_states) == "name"] <- "state_name"
us_states$state_name <- toupper(trimws(us_states$state_name))
avg_2014$state_name <- toupper(trimws(avg_2014$state_name))
# Merge spatial with temperature data
state_temp_map <- merge(us_states, avg_2014, by = "state_name")
# Plot
ggplot(state_temp_map) +
geom_sf(aes(fill = avg_temp_2014), color = "white") +
scale_fill_viridis_c(option = "C", name = "Avg Temp (°C)", limits = c(10, 30)) +
labs(title = "Average Temperature by State (2014)") +
theme_minimal()
# Save data
save(combined_data, file = "US_Temperature_2014.RData")
# ======================
# Daily Max Temperature - 2014 Summary
# ======================
# Clean environment
rm(list = ls())
# Load libraries
library(rnoaa)
library(ggplot2)
library(dplyr)
library(sf)
library(viridis)
# Set working directory (optional for RStudio users)
if (requireNamespace("rstudioapi", quietly = TRUE)) {
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
}
# -----------------------------
# Step 1: Define station IDs
# -----------------------------
station_to_state <- data.frame(
id = c("USW00094823", "USW00093820", "USW00012842", "USW00023234", "USW00013722",
"USW00014732", "USW00012960", "USW00013880", "USW00023183", "USW00013739",
"USW00094728", "USW00024157", "USW00014922", "USW00013957", "USW00023050",
"USW00013748", "USW00014734", "USW00013874", "USW00093729", "USW00023066",
"USW00093817", "USW00024011", "USW00094846", "USW00012918", "USW00024131",
"USW00014941", "USW00012839", "USW00024155", "USW00013994", "USW00025339",
"USW00023065", "USW00094745", "USW00013723", "USW00024229", "USW00013740",
"USW00013889", "USW00013743", "USW00012836", "USW00013735", "USW00014898",
"USW00012921", "USW00013713", "USW00013733", "USW00093993", "USW00093819",
"USW00093721", "USW00023061", "USW00012916", "USW00024156", "USW00014827"),
state_name = c("Alabama", "Alaska", "Arizona", "Arkansas", "California",
"Colorado", "Connecticut", "Delaware", "Florida", "Georgia",
"Hawaii", "Idaho", "Illinois", "Indiana", "Iowa",
"Kansas", "Kentucky", "Louisiana", "Maine", "Maryland",
"Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri",
"Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey",
"New Mexico", "New York", "North Carolina", "North Dakota", "Ohio",
"Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina",
"South Dakota", "Tennessee", "Texas", "Utah", "Vermont",
"Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming")
)
# -----------------------------
# Step 2: Download 2014 data
# -----------------------------
ghcn_data_list <- list()
for (station_id in station_to_state$id) {
message("Downloading: ", station_id)
try({
temp_data <- ghcnd_search(
stationid = station_id,
var = "TMAX",
date_min = "2014-01-01",
date_max = "2014-12-31"
)
if (!is.null(temp_data$tmax)) {
temp_data$tmax$tmax <- temp_data$tmax$tmax / 10
ghcn_data_list[[station_id]] <- temp_data$tmax
}
}, silent = TRUE)
}
# Combine data into one dataframe
combined_data <- bind_rows(ghcn_data_list, .id = "id")
combined_data$date <- as.Date(combined_data$date)
combined_data$year <- format(combined_data$date, "%Y")
# -----------------------------
# Step 3: Plot for New York (USW00094728)
# -----------------------------
# New York 2014 plot
ny_plot <- ggplot(new_york_data, aes(x = date, y = tmax)) +
geom_line(color = "darkblue") +
labs(title = "Daily Max Temperature in New York (2014)",
x = "Date", y = "Temperature (°C)") +
theme_minimal()
# ======================
# Daily Max Temperature - 2014 Summary
# ======================
# Clean environment
rm(list = ls())
# Load libraries
library(rnoaa)
library(ggplot2)
library(dplyr)
library(sf)
library(viridis)
# Set working directory (optional for RStudio users)
if (requireNamespace("rstudioapi", quietly = TRUE)) {
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
}
# -----------------------------
# Step 1: Define station IDs
# -----------------------------
station_to_state <- data.frame(
id = c("USW00094823", "USW00093820", "USW00012842", "USW00023234", "USW00013722",
"USW00014732", "USW00012960", "USW00013880", "USW00023183", "USW00013739",
"USW00094728", "USW00024157", "USW00014922", "USW00013957", "USW00023050",
"USW00013748", "USW00014734", "USW00013874", "USW00093729", "USW00023066",
"USW00093817", "USW00024011", "USW00094846", "USW00012918", "USW00024131",
"USW00014941", "USW00012839", "USW00024155", "USW00013994", "USW00025339",
"USW00023065", "USW00094745", "USW00013723", "USW00024229", "USW00013740",
"USW00013889", "USW00013743", "USW00012836", "USW00013735", "USW00014898",
"USW00012921", "USW00013713", "USW00013733", "USW00093993", "USW00093819",
"USW00093721", "USW00023061", "USW00012916", "USW00024156", "USW00014827"),
state_name = c("Alabama", "Alaska", "Arizona", "Arkansas", "California",
"Colorado", "Connecticut", "Delaware", "Florida", "Georgia",
"Hawaii", "Idaho", "Illinois", "Indiana", "Iowa",
"Kansas", "Kentucky", "Louisiana", "Maine", "Maryland",
"Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri",
"Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey",
"New Mexico", "New York", "North Carolina", "North Dakota", "Ohio",
"Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina",
"South Dakota", "Tennessee", "Texas", "Utah", "Vermont",
"Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming")
)
# -----------------------------
# Step 2: Download 2014 data
# -----------------------------
ghcn_data_list <- list()
for (station_id in station_to_state$id) {
message("Downloading: ", station_id)
try({
temp_data <- ghcnd_search(
stationid = station_id,
var = "TMAX",
date_min = "2014-01-01",
date_max = "2014-12-31"
)
if (!is.null(temp_data$tmax)) {
temp_data$tmax$tmax <- temp_data$tmax$tmax / 10
ghcn_data_list[[station_id]] <- temp_data$tmax
}
}, silent = TRUE)
}
# ======================
# Daily Max Temperature - 2014 Summary
# ======================
# Clean environment
rm(list = ls())
# Load libraries
library(rnoaa)
library(ggplot2)
library(dplyr)
library(sf)
library(viridis)
# Set working directory (optional for RStudio users)
if (requireNamespace("rstudioapi", quietly = TRUE)) {
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
}
# -----------------------------
# Step 1: Define station IDs
# -----------------------------
station_to_state <- data.frame(
id = c("USW00094823", "USW00093820", "USW00012842", "USW00023234", "USW00013722",
"USW00014732", "USW00012960", "USW00013880", "USW00023183", "USW00013739",
"USW00094728", "USW00024157", "USW00014922", "USW00013957", "USW00023050",
"USW00013748", "USW00014734", "USW00013874", "USW00093729", "USW00023066",
"USW00093817", "USW00024011", "USW00094846", "USW00012918", "USW00024131",
"USW00014941", "USW00012839", "USW00024155", "USW00013994", "USW00025339",
"USW00023065", "USW00094745", "USW00013723", "USW00024229", "USW00013740",
"USW00013889", "USW00013743", "USW00012836", "USW00013735", "USW00014898",
"USW00012921", "USW00013713", "USW00013733", "USW00093993", "USW00093819",
"USW00093721", "USW00023061", "USW00012916", "USW00024156", "USW00014827"),
state_name = c("Alabama", "Alaska", "Arizona", "Arkansas", "California",
"Colorado", "Connecticut", "Delaware", "Florida", "Georgia",
"Hawaii", "Idaho", "Illinois", "Indiana", "Iowa",
"Kansas", "Kentucky", "Louisiana", "Maine", "Maryland",
"Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri",
"Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey",
"New Mexico", "New York", "North Carolina", "North Dakota", "Ohio",
"Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina",
"South Dakota", "Tennessee", "Texas", "Utah", "Vermont",
"Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming")
)
# -----------------------------
# Step 2: Download 2014 data
# -----------------------------
ghcn_data_list <- list()
for (station_id in station_to_state$id) {
message("Downloading: ", station_id)
try({
temp_data <- ghcnd_search(
stationid = station_id,
var = "TMAX",
date_min = "2014-01-01",
date_max = "2014-12-31"
)
if (!is.null(temp_data$tmax)) {
temp_data$tmax$tmax <- temp_data$tmax$tmax / 10
ghcn_data_list[[station_id]] <- temp_data$tmax
}
}, silent = TRUE)
}
# Combine data into one dataframe
combined_data <- bind_rows(ghcn_data_list, .id = "id")
combined_data$date <- as.Date(combined_data$date)
combined_data$year <- format(combined_data$date, "%Y")
# -----------------------------
# Step 3: Plot for New York (USW00094728)
# -----------------------------
# Extract New York data
new_york_data <- combined_data %>% filter(id == "USW00094728")
# New York 2014 plot
ny_plot <- ggplot(new_york_data, aes(x = date, y = tmax)) +
geom_line(color = "darkblue") +
labs(title = "Daily Max Temperature in New York (2014)",
x = "Date", y = "Temperature (°C)") +
theme_minimal()
# Display and save
print(ny_plot)
ggsave("NY_Temperature_2014.png", plot = ny_plot, width = 8, height = 5, dpi = 300)
# -----------------------------
# Step 4: Map of 2014 Average Temperature by State
# -----------------------------
# Compute state-wise average
avg_2014 <- combined_data %>%
group_by(id) %>%
summarize(avg_temp_2014 = mean(tmax, na.rm = TRUE), .groups = "drop") %>%
inner_join(station_to_state, by = "id")
# Load US states shapefile
us_states <- st_read("us-state-boundaries.shp")
colnames(us_states)[colnames(us_states) == "name"] <- "state_name"
us_states$state_name <- toupper(trimws(us_states$state_name))
avg_2014$state_name <- toupper(trimws(avg_2014$state_name))
# Merge spatial with temperature data
state_temp_map <- merge(us_states, avg_2014, by = "state_name")
# U.S. 2014 average temperature map
us_map_plot <- ggplot(state_temp_map) +
geom_sf(aes(fill = avg_temp_2014), color = "white") +
scale_fill_viridis_c(option = "C", name = "Avg Temp (°C)", limits = c(10, 30)) +
labs(title = "Average Temperature by State (2014)") +
theme_minimal()
# Display and save
print(us_map_plot)
ggsave("US_Temperature_Map_2014.png", plot = us_map_plot, width = 10, height = 7, dpi = 300)
# Compute state-wise average
avg_2014 <- combined_data %>%
group_by(id) %>%
summarize(avg_temp_2014 = mean(tmax, na.rm = TRUE), .groups = "drop") %>%
inner_join(station_to_state, by = "id")
# ======================
# Daily Max Temperature - 2014 Summary
# ======================
# Clean environment
rm(list = ls())
# Load libraries
library(rnoaa)
library(ggplot2)
library(dplyr)
library(sf)
library(viridis)
# Set working directory (optional for RStudio users)
if (requireNamespace("rstudioapi", quietly = TRUE)) {
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
}
# -----------------------------
# Step 1: Define station IDs
# -----------------------------
station_to_state <- data.frame(
id = c("USW00094823", "USW00093820", "USW00012842", "USW00023234", "USW00013722",
"USW00014732", "USW00012960", "USW00013880", "USW00023183", "USW00013739",
"USW00094728", "USW00024157", "USW00014922", "USW00013957", "USW00023050",
"USW00013748", "USW00014734", "USW00013874", "USW00093729", "USW00023066",
"USW00093817", "USW00024011", "USW00094846", "USW00012918", "USW00024131",
"USW00014941", "USW00012839", "USW00024155", "USW00013994", "USW00025339",
"USW00023065", "USW00094745", "USW00013723", "USW00024229", "USW00013740",
"USW00013889", "USW00013743", "USW00012836", "USW00013735", "USW00014898",
"USW00012921", "USW00013713", "USW00013733", "USW00093993", "USW00093819",
"USW00093721", "USW00023061", "USW00012916", "USW00024156", "USW00014827"),
state_name = c("Alabama", "Alaska", "Arizona", "Arkansas", "California",
"Colorado", "Connecticut", "Delaware", "Florida", "Georgia",
"Hawaii", "Idaho", "Illinois", "Indiana", "Iowa",
"Kansas", "Kentucky", "Louisiana", "Maine", "Maryland",
"Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri",
"Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey",
"New Mexico", "New York", "North Carolina", "North Dakota", "Ohio",
"Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina",
"South Dakota", "Tennessee", "Texas", "Utah", "Vermont",
"Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming")
)
# -----------------------------
# Step 2: Download 2014 data
# -----------------------------
ghcn_data_list <- list()
for (station_id in station_to_state$id) {
message("Downloading: ", station_id)
try({
temp_data <- ghcnd_search(
stationid = station_id,
var = "TMAX",
date_min = "2014-01-01",
date_max = "2014-12-31"
)
if (!is.null(temp_data$tmax)) {
temp_data$tmax$tmax <- temp_data$tmax$tmax / 10
ghcn_data_list[[station_id]] <- temp_data$tmax
}
}, silent = TRUE)
}
# Combine data into one dataframe
combined_data <- bind_rows(ghcn_data_list, .id = "id")
combined_data$date <- as.Date(combined_data$date)
combined_data$year <- format(combined_data$date, "%Y")
# -----------------------------
# Step 3: Plot for New York (USW00094728)
# -----------------------------
# Extract New York data
new_york_data <- combined_data %>% filter(id == "USW00094728")
# New York 2014 plot
ny_plot <- ggplot(new_york_data, aes(x = date, y = tmax)) +
geom_line(color = "darkblue") +
labs(title = "Daily Max Temperature in New York (2014)",
x = "Date", y = "Temperature (°C)") +
theme_minimal()
# Display and save
print(ny_plot)
ggsave("NY_Temperature_2014.png", plot = ny_plot, width = 8, height = 5, dpi = 300)
# -----------------------------
# Step 4: Map of 2014 Average Temperature by State
# -----------------------------
# Compute state-wise average
avg_2014 <- combined_data %>%
group_by(id) %>%
summarize(avg_temp_2014 = mean(tmax, na.rm = TRUE), .groups = "drop") %>%
inner_join(station_to_state, by = "id")
# Load and process US shapefile
us_states <- st_read("us-state-boundaries.shp", quiet = TRUE)
colnames(us_states)[colnames(us_states) == "name"] <- "state_name"
us_states$state_name <- toupper(trimws(us_states$state_name))
avg_2014$state_name <- toupper(trimws(avg_2014$state_name))
# Merge with temperature data
state_temp_map <- merge(us_states, avg_2014, by = "state_name")
# Transform CRS to match long/lat for better projection (EPSG:4326)
us_states <- st_transform(us_states, crs = 4326)
state_temp_map <- st_transform(state_temp_map, crs = 4326)
# Plot with improved centering and minimal margin
us_map_plot <- ggplot(data = state_temp_map) +
geom_sf(aes(fill = avg_temp_2014), color = "white", size = 0.3) +
scale_fill_viridis_c(option = "C", name = "Avg Temp (°C)", limits = c(10, 30)) +
labs(title = "Average Temperature by State (2014)") +
coord_sf(xlim = c(-125, -66), ylim = c(24, 50), expand = FALSE) +  # tighter bounding box
theme_minimal() +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
)
# Display and save
print(us_map_plot)
ggsave("US_Temperature_Map_2014.png", plot = us_map_plot, width = 11, height = 6.5, dpi = 300)
