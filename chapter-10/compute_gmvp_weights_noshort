# Function to compute GMVP weights with no short-selling constraints
compute_mvp_weights <- function(cov_matrix) {
  n <- nrow(cov_matrix)  # Number of assets
  
  # Multiply by 2 because quadprog minimizes: 0.5 * t(x) %*% Dmat %*% x + t(dvec) %*% x
  Dmat <- 2 * cov_matrix  
  # Linear term is zero since the objective is purely quadratic
  dvec <- rep(0, n)      
  
  # Constraint matrix:
  # First column enforces the equality constraint: sum(weights) = 1
  # Remaining columns enforce inequality constraints: weights >= 0
  Amat <- cbind(rep(1, n), diag(n))
  
  # Right-hand side of the constraints
  # First value for equality constraint, others for inequality constraints
  bvec <- c(1, rep(0, n))
  
  meq <- 1  # Number of equality constraints (only sum of weights = 1)
  
  # Solve the quadratic programming problem
  solution <- quadprog::solve.QP(Dmat, dvec, Amat, bvec, meq)
  
  # Return the optimized weights
  return(solution$solution)
}
