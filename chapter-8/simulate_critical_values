		# Clear all objects from the workspace
		rm(list = ls())
		
		# Set seed for reproducibility
		set.seed(123456789)
		
		# Set the working directory
		folder <- c("/Users/R_scripts")
		setwd(folder)
		
		# Simulation parameters
		numrep <- 10000
		sample.size <- 200000
		
		# Initialize vectors to store test results
		Hong.M.test <- numeric(numrep)
		Shao.S.test <- numeric(numrep)
		standard.normal <- numeric(numrep)
		
		# Simulation loop
		for (i in 1:numrep) {
			times <- seq(0, 1, length.out = sample.size)
			dB <- rnorm(sample.size) / sqrt(sample.size)
			B <- cumsum(dB)
			Brownian.Bridge <- B - times * B[sample.size]
			
			adjusted.range.self.normalizer <- max(Brownian.Bridge) - min(Brownian.Bridge)
			B1 <- mean(dB) * sample.size
			M <- B1 / adjusted.range.self.normalizer
			Hong.M.test[i] <- M
			
			# Self-normalized test based on Shao (2010)
			dt <- times[2] - times[1]
			Brownian.Bridge.integral <- sum(Brownian.Bridge^2) * dt
			Shao.S.test[i] <- B1 / sqrt(Brownian.Bridge.integral)
			standard.normal[i] <- B1
			
			if (i %% 1000 == 0) print(i)
		}
		
		# Write results to CSV files
		write.csv(Hong.M.test, "M-test.csv")
		write.csv(Shao.S.test, "Shao-SN.csv")
		write.csv(standard.normal, "N01.csv")
		
		# Critical value calculations
		cv.list <- c(5, 2.5, 1, 0.5, 0.1) / 100
		cv.sample <- round(numrep * (1 - cv.list))
		result <- rbind(cv.list,
		sort(Hong.M.test)[cv.sample],
		sort(Shao.S.test)[cv.sample],
		sort(standard.normal)[cv.sample])
		
		rownames(result) <- c("alpha", "Hong et al.'s (2024) M", "Shao's (2010) S", "N(0,1)")
		result <- t(result)
		
		# Save critical values to a LaTeX table
		library(xtable)
		result.xtable <- xtable(result, digits = 4)
		print(result.xtable, file = "cv.tex")
		
		# Plot histograms and density estimates
		jpeg(filename = 'dist-m-hat.png', width = 700, height = 350)
		plot(density(Hong.M.test, adjust = 2), 
		col = "red", lwd = 2, main = "", xlab = "", ylab = "")
		lines(density(Shao.S.test, adjust = 2), col = "green", lwd = 2)
		lines(density(standard.normal, adjust = 2), col = "blue", lwd = 2)
		legend("topleft", 
		legend = c("Hong et al.'s (2024) M", "Shao's (2010) S", "N(0,1)"),
		text.col = "black", lwd = 2, col = c("red", "green", "blue"))
		dev.off()
